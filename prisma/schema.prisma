// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model Product {
//   id Int @id @default(autoincrement())
//   name String 
//   image String
//   description String
//   price Int
//   rating String
//   status String
//   quantity Int
//   user User[]
// }

// model User {
//   id Int @id @default(autoincrement())
//   username String @unique
//   email String
//   password String
//   phoneNumber String
//   address String
//   authed Boolean @default(true)
//   productId Int?
//   product Product? @relation(fields: [productId], references: [id])

// }


model Product {
  id          Int      @id @default(autoincrement())
  name        String
  image       String
  description String
  price       Int
  rating      String
  status      String
  quantity    Int
  user        User[]
  items       Item[]
}

model User {
  id          Int      @id @default(autoincrement())
  username    String   @unique
  email       String
  password    String
  phoneNumber String
  address     String
  authed      Boolean  @default(true)
  productId   Int?
  product     Product? @relation(fields: [productId], references: [id])
  orders      Order[]
}

model Order {
  id         Int    @id @default(autoincrement())
  totalCount Int
  totalPaid  Int
  userId     Int
  user       User   @relation(fields: [userId], references: [id])
  items      Item[]
}

model Item {
  id        Int      @id @default(autoincrement())
  quantity  Int
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  orderId   Int
  order     Order    @relation(fields: [orderId], references: [id])
}